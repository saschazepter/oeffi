plugins {
    id 'com.android.application'
    id 'androidsvgdrawable'
}

configurations {
    all*.exclude group: 'org.json', module: 'json'
    all*.exclude group: 'net.sf.kxml', module: 'kxml2'
    all*.exclude group: 'androidx.legacy', module: 'legacy-support-core-ui'
    all*.exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk7'
    all*.exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk8'
}

dependencies {
    implementation(project(':public-transport-enabler')) {
        exclude group: 'org.slf4j', module: 'slf4j-api'
    }
    implementation 'androidx.annotation:annotation:1.8.2'
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.2.0'
    implementation 'androidx.drawerlayout:drawerlayout:1.2.0'
    implementation 'androidx.core:core:1.13.1'
    implementation 'androidx.activity:activity:1.9.3'
    //noinspection GradleDependency
    implementation 'com.squareup.okhttp3:okhttp:3.12.13'
    //noinspection GradleDependency
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.13'
    implementation 'com.google.guava:guava:33.4.8-android'
    implementation 'org.osmdroid:osmdroid-android:6.1.20'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    //noinspection GradleDependency
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'com.github.tony19:logback-android:3.0.0'
    testImplementation 'junit:junit:4.13.2'
}

android {
    compileSdkVersion 'android-34'
    buildToolsVersion '35.0.0'

    defaultConfig {
        generatedDensities = ['hdpi', 'xhdpi']
    }

    buildTypes {
        all {
            minifyEnabled true
            shrinkResources true
            crunchPngs false
            proguardFile 'proguard.cfg'
        }
        debug {
            debuggable true
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
        test {
            java.srcDirs = ['test']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/*.version'
        exclude 'META-INF/proguard/**'
        exclude 'META-INF/services/**'
        exclude 'META-INF/*.kotlin_module'
        exclude 'META-INF/**/coroutines.pro'
        exclude 'DebugProbesKt.bin'
        exclude 'kotlin/**'
    }
}

task svgToPng(type: fr.avianey.androidsvgdrawable.gradle.SvgDrawableTask) {
    from = files('graphics')
    to = file('res')
    targetedDensities = ['xxhdpi', 'xxxhdpi']
    outputFormat = 'PNG'
    outputType = 'mipmap'
}
